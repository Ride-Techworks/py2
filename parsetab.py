
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'leftCONCATleftPLUSMINUSleftTIMESDIVIDEALEATORIO COLON COMMA CONCAT DIVIDE ENTRADA EQUALS ESCREVER FIM FUNCAO LBRACKET LPAREN MINUS NUM PLUS RBRACKET RPAREN SEMI STR TIMES VARIAVELprogram : statement_liststatement_list : statement_list statement\n        | statement\n        | emptystatement : assignment SEMI\n        | statement_expr SEMI\n        | function_declarationstatement_expr : ESCREVER LPAREN expression RPAREN\n        | ALEATORIO LPAREN NUM RPAREN\n        | ENTRADA LPAREN RPAREN\n        | function_callassignment : VARIAVEL EQUALS expressionexpression : exprexpr : expr PLUS term\n        | expr MINUS term\n        | expr CONCAT term\n        | termterm : term TIMES factor\n        | term DIVIDE factor\n        | factorfactor : NUM\n        | LPAREN expression RPAREN\n        | STR\n        | VARIAVEL\n        | listlist : LBRACKET elements RBRACKETelements : expression\n        | elements COMMA expressionfunction_declaration : FUNCAO VARIAVEL LPAREN parameter_list RPAREN COLON statement_list FIMfunction_call : VARIAVEL LPAREN argument_list RPARENargument_list : expression\n        | argument_list COMMA expressionparameter_list : VARIAVEL\n        | parameter_list COMMA VARIAVELempty :'
    
_lr_action_items = {'VARIAVEL':([0,2,3,4,7,13,14,15,16,17,18,19,29,32,38,39,40,41,42,43,48,60,63,65,67,68,],[8,8,-3,-4,-7,22,-2,-5,-6,23,23,23,23,23,51,23,23,23,23,23,23,23,66,8,8,-29,]),'ESCREVER':([0,2,3,4,7,14,15,16,65,67,68,],[9,9,-3,-4,-7,-2,-5,-6,9,9,-29,]),'ALEATORIO':([0,2,3,4,7,14,15,16,65,67,68,],[10,10,-3,-4,-7,-2,-5,-6,10,10,-29,]),'ENTRADA':([0,2,3,4,7,14,15,16,65,67,68,],[11,11,-3,-4,-7,-2,-5,-6,11,11,-29,]),'FUNCAO':([0,2,3,4,7,14,15,16,65,67,68,],[13,13,-3,-4,-7,-2,-5,-6,13,13,-29,]),'$end':([0,1,2,3,4,7,14,15,16,68,],[-35,0,-1,-3,-4,-7,-2,-5,-6,-29,]),'FIM':([3,4,7,14,15,16,65,67,68,],[-3,-4,-7,-2,-5,-6,-35,68,-29,]),'SEMI':([5,6,12,23,24,25,26,27,28,30,31,37,47,49,50,53,54,55,56,57,58,59,],[15,16,-11,-24,-12,-13,-17,-20,-21,-23,-25,-10,-30,-8,-9,-14,-15,-16,-18,-19,-22,-26,]),'EQUALS':([8,],[17,]),'LPAREN':([8,9,10,11,17,18,19,22,29,32,39,40,41,42,43,48,60,],[18,19,20,21,29,29,29,38,29,29,29,29,29,29,29,29,29,]),'NUM':([17,18,19,20,29,32,39,40,41,42,43,48,60,],[28,28,28,36,28,28,28,28,28,28,28,28,28,]),'STR':([17,18,19,29,32,39,40,41,42,43,48,60,],[30,30,30,30,30,30,30,30,30,30,30,30,]),'LBRACKET':([17,18,19,29,32,39,40,41,42,43,48,60,],[32,32,32,32,32,32,32,32,32,32,32,32,]),'RPAREN':([21,23,25,26,27,28,30,31,33,34,35,36,44,51,52,53,54,55,56,57,58,59,61,66,],[37,-24,-13,-17,-20,-21,-23,-25,47,-31,49,50,58,-33,62,-14,-15,-16,-18,-19,-22,-26,-32,-34,]),'TIMES':([23,26,27,28,30,31,53,54,55,56,57,58,59,],[-24,42,-20,-21,-23,-25,42,42,42,-18,-19,-22,-26,]),'DIVIDE':([23,26,27,28,30,31,53,54,55,56,57,58,59,],[-24,43,-20,-21,-23,-25,43,43,43,-18,-19,-22,-26,]),'PLUS':([23,25,26,27,28,30,31,53,54,55,56,57,58,59,],[-24,39,-17,-20,-21,-23,-25,-14,-15,-16,-18,-19,-22,-26,]),'MINUS':([23,25,26,27,28,30,31,53,54,55,56,57,58,59,],[-24,40,-17,-20,-21,-23,-25,-14,-15,-16,-18,-19,-22,-26,]),'CONCAT':([23,25,26,27,28,30,31,53,54,55,56,57,58,59,],[-24,41,-17,-20,-21,-23,-25,-14,-15,-16,-18,-19,-22,-26,]),'COMMA':([23,25,26,27,28,30,31,33,34,45,46,51,52,53,54,55,56,57,58,59,61,64,66,],[-24,-13,-17,-20,-21,-23,-25,48,-31,60,-27,-33,63,-14,-15,-16,-18,-19,-22,-26,-32,-28,-34,]),'RBRACKET':([23,25,26,27,28,30,31,45,46,53,54,55,56,57,58,59,64,],[-24,-13,-17,-20,-21,-23,-25,59,-27,-14,-15,-16,-18,-19,-22,-26,-28,]),'COLON':([62,],[65,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,],[1,]),'statement_list':([0,65,],[2,67,]),'statement':([0,2,65,67,],[3,14,3,14,]),'empty':([0,65,],[4,4,]),'assignment':([0,2,65,67,],[5,5,5,5,]),'statement_expr':([0,2,65,67,],[6,6,6,6,]),'function_declaration':([0,2,65,67,],[7,7,7,7,]),'function_call':([0,2,65,67,],[12,12,12,12,]),'expression':([17,18,19,29,32,48,60,],[24,34,35,44,46,61,64,]),'expr':([17,18,19,29,32,48,60,],[25,25,25,25,25,25,25,]),'term':([17,18,19,29,32,39,40,41,48,60,],[26,26,26,26,26,53,54,55,26,26,]),'factor':([17,18,19,29,32,39,40,41,42,43,48,60,],[27,27,27,27,27,27,27,27,56,57,27,27,]),'list':([17,18,19,29,32,39,40,41,42,43,48,60,],[31,31,31,31,31,31,31,31,31,31,31,31,]),'argument_list':([18,],[33,]),'elements':([32,],[45,]),'parameter_list':([38,],[52,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> statement_list','program',1,'p_program','grammar.py',33),
  ('statement_list -> statement_list statement','statement_list',2,'p_statement_list','grammar.py',38),
  ('statement_list -> statement','statement_list',1,'p_statement_list','grammar.py',39),
  ('statement_list -> empty','statement_list',1,'p_statement_list','grammar.py',40),
  ('statement -> assignment SEMI','statement',2,'p_statement','grammar.py',53),
  ('statement -> statement_expr SEMI','statement',2,'p_statement','grammar.py',54),
  ('statement -> function_declaration','statement',1,'p_statement','grammar.py',55),
  ('statement_expr -> ESCREVER LPAREN expression RPAREN','statement_expr',4,'p_statement_expr','grammar.py',64),
  ('statement_expr -> ALEATORIO LPAREN NUM RPAREN','statement_expr',4,'p_statement_expr','grammar.py',65),
  ('statement_expr -> ENTRADA LPAREN RPAREN','statement_expr',3,'p_statement_expr','grammar.py',66),
  ('statement_expr -> function_call','statement_expr',1,'p_statement_expr','grammar.py',67),
  ('assignment -> VARIAVEL EQUALS expression','assignment',3,'p_assignment','grammar.py',89),
  ('expression -> expr','expression',1,'p_expression','grammar.py',94),
  ('expr -> expr PLUS term','expr',3,'p_expr','grammar.py',98),
  ('expr -> expr MINUS term','expr',3,'p_expr','grammar.py',99),
  ('expr -> expr CONCAT term','expr',3,'p_expr','grammar.py',100),
  ('expr -> term','expr',1,'p_expr','grammar.py',101),
  ('term -> term TIMES factor','term',3,'p_term','grammar.py',116),
  ('term -> term DIVIDE factor','term',3,'p_term','grammar.py',117),
  ('term -> factor','term',1,'p_term','grammar.py',118),
  ('factor -> NUM','factor',1,'p_factor','grammar.py',130),
  ('factor -> LPAREN expression RPAREN','factor',3,'p_factor','grammar.py',131),
  ('factor -> STR','factor',1,'p_factor','grammar.py',132),
  ('factor -> VARIAVEL','factor',1,'p_factor','grammar.py',133),
  ('factor -> list','factor',1,'p_factor','grammar.py',134),
  ('list -> LBRACKET elements RBRACKET','list',3,'p_list','grammar.py',150),
  ('elements -> expression','elements',1,'p_elements','grammar.py',155),
  ('elements -> elements COMMA expression','elements',3,'p_elements','grammar.py',156),
  ('function_declaration -> FUNCAO VARIAVEL LPAREN parameter_list RPAREN COLON statement_list FIM','function_declaration',8,'p_function_declaration','grammar.py',166),
  ('function_call -> VARIAVEL LPAREN argument_list RPAREN','function_call',4,'p_function_call','grammar.py',171),
  ('argument_list -> expression','argument_list',1,'p_argument_list','grammar.py',176),
  ('argument_list -> argument_list COMMA expression','argument_list',3,'p_argument_list','grammar.py',177),
  ('parameter_list -> VARIAVEL','parameter_list',1,'p_parameter_list','grammar.py',186),
  ('parameter_list -> parameter_list COMMA VARIAVEL','parameter_list',3,'p_parameter_list','grammar.py',187),
  ('empty -> <empty>','empty',0,'p_empty','grammar.py',196),
]
